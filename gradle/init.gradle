/*
 * This Gradle init script defines some tasks, configurations, and 
 * properties that are common across projects. To use this init script 
 * with a Gradle project, just call gradle with the '-I' switch and 
 * provide the full path to this script.
 */

ext.dependencyCheckBin = 'C:\\\\tools\\dependency-check\\bin\\dependency-check.bat'

allprojects {
	/* Define Java project tasks & configs */
	plugins.withType(JavaPlugin) {

		// Package Javadoc with jar (e.g. for installing to local Maven repo)
		task javadocJar(type: Jar) {
			classifier = 'javadoc'
			from javadoc
		}
		artifacts {
			archives javadocJar
		}

		task exportDeps() << {
			configurations.findAll().each { config ->
				println "|----> Exporting ${config.name} depenendencies"
				copy {
					from config
					into "${project.buildDir}/exported-dependencies/${config.name}"
				}
			}
		}

		task dependencyCheck(dependsOn: 'exportDeps', type: Exec) {
			commandLine "${dependencyCheckBin}", \
			'-a', "${project.name}", \
			'-f', 'ALL', \
			'-n', \
			'-o', "${project.buildDir}/exported-dependencies", \
			'-s', "${project.projectDir}"
		}

		test {
		  testLogging {
			// Show that tests are run in the command-line output
			events 'started', 'passed'
		  }
		}
	}
	plugins.withType(EclipsePlugin) {
		eclipse {
			pathVariables 'GRADLE_HOME': file('/mnt/.gradle'), 'M2_REPO': file('/mnt/.m2/repository')
			classpath {
				downloadJavadoc = true
			}
		}
	}
}
